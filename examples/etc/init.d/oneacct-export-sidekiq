#!/bin/sh

### BEGIN INIT INFO
# Provides:          oneacct-export-sidekiq
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop oneacct-export sidekiq server
# Description:       Start the sidekiq server required by oneacct-export.
### END INIT INFO

# source function library
. /lib/lsb/init-functions

run_dir="/var/run/oneacct-export"
log_dir="/var/log/oneacct-export"
conf_dir="/etc/oneacct-export"

omnibus_base_dir="/opt/oneacct-export"
embedded_base_dir="$omnibus_base_dir/embedded"
embedded_ruby_version=`$embedded_base_dir/bin/ruby -e "puts RUBY_VERSION.split('.').fill('0',2..2).join('.')"`
embedded_oneacct_version=`$omnibus_base_dir/bin/oneacct-export --version`
embedded_oneacct_dir="$embedded_base_dir/lib/ruby/gems/$embedded_ruby_version/gems/oneacct-export-$embedded_oneacct_version"

user="apel"
cmd="$omnibus_base_dir/bin/sidekiq -r $embedded_oneacct_dir/lib/one_worker.rb -C $conf_dir/sidekiq.yml"

name=`basename $0`
pid_file="$run_dir/sidekiq.init.pid"
stdout_log="$log_dir/sidekiq.init.stdout.log"
stderr_log="$log_dir/sidekiq.init.stderr.log"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        log_daemon_msg "Already started"
    else
        log_daemon_msg "Starting $name ..."
        cd "$run_dir"
        sudo -u "$user" $cmd >> "$stdout_log" 2>> "$stderr_log" &
        echo $! > "$pid_file"
        if ! is_running; then
            log_failure_msg "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        else
            log_success_msg "Started"
        fi
    fi
    ;;
    stop)
    if is_running; then
        log_daemon_msg "Stopping $name ..."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            log_failure_msg "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            log_success_msg "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        log_daemon_msg "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        log_failure_msg "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        log_daemon_msg "Running"
    else
        log_daemon_msg "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
